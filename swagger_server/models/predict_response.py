# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class PredictResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, row_id: int=None, indicator: float=None):  # noqa: E501
        """PredictResponse - a model defined in Swagger

        :param row_id: The row_id of this PredictResponse.  # noqa: E501
        :type row_id: int
        :param indicator: The indicator of this PredictResponse.  # noqa: E501
        :type indicator: float
        """
        self.swagger_types = {
            'row_id': int,
            'indicator': float
        }

        self.attribute_map = {
            'row_id': 'row_id',
            'indicator': 'indicator'
        }

        self._row_id = row_id
        self._indicator = indicator

    @classmethod
    def from_dict(cls, dikt) -> 'PredictResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PredictResponse of this PredictResponse.  # noqa: E501
        :rtype: PredictResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def row_id(self) -> int:
        """Gets the row_id of this PredictResponse.


        :return: The row_id of this PredictResponse.
        :rtype: int
        """
        return self._row_id

    @row_id.setter
    def row_id(self, row_id: int):
        """Sets the row_id of this PredictResponse.


        :param row_id: The row_id of this PredictResponse.
        :type row_id: int
        """

        self._row_id = row_id

    @property
    def indicator(self) -> float:
        """Gets the indicator of this PredictResponse.


        :return: The indicator of this PredictResponse.
        :rtype: float
        """
        return self._indicator

    @indicator.setter
    def indicator(self, indicator: float):
        """Sets the indicator of this PredictResponse.


        :param indicator: The indicator of this PredictResponse.
        :type indicator: float
        """

        self._indicator = indicator
