# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class TrainData(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, model_id: str=None, model_name: str=None, comment: str=None, created_at: str=None, dataset_id: int=None):  # noqa: E501
        """TrainData - a model defined in Swagger

        :param model_id: The model_id of this TrainData.  # noqa: E501
        :type model_id: str
        :param model_name: The model_name of this TrainData.  # noqa: E501
        :type model_name: str
        :param comment: The comment of this TrainData.  # noqa: E501
        :type comment: str
        :param created_at: The created_at of this TrainData.  # noqa: E501
        :type created_at: str
        :param dataset_id: The dataset_id of this TrainData.  # noqa: E501
        :type dataset_id: int
        """
        self.swagger_types = {
            'model_id': str,
            'model_name': str,
            'comment': str,
            'created_at': str,
            'dataset_id': int
        }

        self.attribute_map = {
            'model_id': 'modelId',
            'model_name': 'modelName',
            'comment': 'comment',
            'created_at': 'createdAt',
            'dataset_id': 'datasetId'
        }

        self._model_id = model_id
        self._model_name = model_name
        self._comment = comment
        self._created_at = created_at
        self._dataset_id = dataset_id

    @classmethod
    def from_dict(cls, dikt) -> 'TrainData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The trainData of this TrainData.  # noqa: E501
        :rtype: TrainData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def model_id(self) -> str:
        """Gets the model_id of this TrainData.


        :return: The model_id of this TrainData.
        :rtype: str
        """
        return self._model_id

    @model_id.setter
    def model_id(self, model_id: str):
        """Sets the model_id of this TrainData.


        :param model_id: The model_id of this TrainData.
        :type model_id: str
        """

        self._model_id = model_id

    @property
    def model_name(self) -> str:
        """Gets the model_name of this TrainData.


        :return: The model_name of this TrainData.
        :rtype: str
        """
        return self._model_name

    @model_name.setter
    def model_name(self, model_name: str):
        """Sets the model_name of this TrainData.


        :param model_name: The model_name of this TrainData.
        :type model_name: str
        """

        self._model_name = model_name

    @property
    def comment(self) -> str:
        """Gets the comment of this TrainData.


        :return: The comment of this TrainData.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment: str):
        """Sets the comment of this TrainData.


        :param comment: The comment of this TrainData.
        :type comment: str
        """

        self._comment = comment

    @property
    def created_at(self) -> str:
        """Gets the created_at of this TrainData.


        :return: The created_at of this TrainData.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at: str):
        """Sets the created_at of this TrainData.


        :param created_at: The created_at of this TrainData.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def dataset_id(self) -> int:
        """Gets the dataset_id of this TrainData.


        :return: The dataset_id of this TrainData.
        :rtype: int
        """
        return self._dataset_id

    @dataset_id.setter
    def dataset_id(self, dataset_id: int):
        """Sets the dataset_id of this TrainData.


        :param dataset_id: The dataset_id of this TrainData.
        :type dataset_id: int
        """

        self._dataset_id = dataset_id
